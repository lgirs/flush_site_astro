---
/**
 * HeroBurst.astro
 * Center logo (smaller) surrounded by a ring of vector images (SVGs) in Flush white.
 * Put your SVGs under: /public/images/marks/
 *
 * Props:
 *  - centerLogo: path to the center logo image (PNG/SVG)
 *  - marks: array of image paths (SVGs) to place around the logo
 *  - maxWidth: container width to match header (default 1100px)
 *  - padX: horizontal padding to match header (default 1rem)
 *  - radius: ring radius (CSS size) e.g. "min(38vw, 420px)"
 *  - size: size of each mark (CSS size) e.g. "clamp(36px, 6vw, 80px)"
 *  - jitter: degrees to randomly jitter each mark a bit (default 10)
 *
 * NOTE: We color marks via CSS mask so they render in Flush white consistently.
 */
interface Props {
  centerLogo?: string;
  marks?: string[];
  maxWidth?: string;
  padX?: string;
  radius?: string;
  size?: string;
  jitter?: number;
}

const {
  centerLogo = "/images/logo-flush-white-orange_vex.png",
  // Replace these with your uploaded vectors in /public/images/marks/
  marks = [
    "/images/marks.shit.svg",
    "/images/marks.together.svg",
    "/images/marks.fireworks.svg",
    "/images/marks.burn.svg",
    "/images/marks.head.svg",
    "/images/marks.control.svg",
    "/images/marks.dark.svg",
    "/images/marks.race.svg",
"/images/marks.insane.svg",
"/images/marks.worry.svg",
"/images/marks.wisdom.svg",
"/images/marks.owl.svg",
"/images/marks.clock.svg",
"/images/marks.feet.svg",
"/images/marks.all.svg",
"/images/marks.found.svg",
"/images/marks.us.svg",
"/images/marks.join me.svg",
  ],
  maxWidth = "1100px",
  padX = "1rem",
  radius = "min(38vw, 420px)",
  size = "clamp(36px, 6vw, 80px)",
  jitter = 10,
} as Props;

// Pre-compute angles for each mark and a tiny jitter so layout feels alive
const total = marks.length || 1;
const ring = marks.map((src, i) => {
  const angle = (i / total) * 360;
  // small deterministic jitter per index
  const j = ((i * 37) % (jitter * 2)) - jitter; // -jitter..+jitter
  return { src, angle: angle + j };
});
---
<section class="burst" style={`--mx:${maxWidth}; --px:${padX}; --radius:${radius}; --mark-size:${size};`}>
  <div class="burst__inner">
    <!-- center logo -->
    <img src={centerLogo} alt="Flush" class="burst__logo" loading="eager" />

    <!-- ring of vector marks -->
    <div class="burst__ring" aria-hidden="true">
      {ring.map((m) => (
        <span
          class="mark"
          style={`--angle:${m.angle}deg; --img:url('${m.src}');`}
        />
      ))}
    </div>
  </div>
</section>

<style>
  .burst {
    background: var(--flush-black);
    padding-block: clamp(2.5rem, 8vw, 7rem);
  }
  .burst__inner{
    max-width: var(--mx);
    margin-inline: auto;
    padding-inline: var(--px);
    position: relative;
    display: grid;
    place-items: center;
    isolation: isolate;
  }

  /* center logo slightly smaller than before */
  .burst__logo{
    width: min(36vw, 360px);
    height: auto;
    display: block;
    filter: drop-shadow(0 6px 14px rgba(0,0,0,.45));
    z-index: 1;
  }

  /* ring layer */
  .burst__ring{
    position: absolute;
    inset: 0;
    display: grid;
    place-items: center;
    z-index: 0;
    pointer-events: none;
  }

  /* each mark uses the SVG as a mask so we can color it Flush white */
  .mark{
    position: absolute;
    width: var(--mark-size);
    height: var(--mark-size);
    background: var(--flush-light); /* Flush white tint */
    filter: drop-shadow(0 8px 18px rgba(0,0,0,.35));
    opacity: .95;

    /* mask the external SVG */
    -webkit-mask-image: var(--img);
    mask-image: var(--img);
    -webkit-mask-repeat: no-repeat; mask-repeat: no-repeat;
    -webkit-mask-position: center;   mask-position: center;
    -webkit-mask-size: contain;      mask-size: contain;

    /* position on ring using rotate/translate trick */
    transform:
      rotate(var(--angle))
      translate(var(--radius))
      rotate(calc(var(--angle) * -1));
    transform-origin: center;
  }

  @media (min-width: 900px){
    .burst__logo{ width: min(28vw, 340px); }
    .mark{ opacity: .92; }
  }
</style>
