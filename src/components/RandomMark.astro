---
/**
 * RandomMark.astro
 * Shows ONE clean hero mark on each page load.
 * Put only approved hero SVGs in: src/assets/marks/hero/*.svg
 *
 * Build-time step: we collect the URLs.
 * Runtime step: we randomly pick one in the browser on each load.
 */
const heroModules = import.meta.glob("../assets/marks/hero/*.svg", {
  import: "default",
  query: "?url",
  eager: true,
});
const heroUrls = Object.values(heroModules) as string[];
---

<!-- Root sized by parent (the hero). This block is the visible mark -->
<div class="rm" aria-hidden="true">
  <div class="rm__bg"></div>
  {heroUrls.length === 0 && (
    <div class="rm__debug">Put SVGs in <code>src/assets/marks/hero/</code></div>
  )}
</div>

<script type="module" data-urls={JSON.stringify(heroUrls)}>
  const urls = JSON.parse(document.currentScript.dataset.urls || "[]");
  const root = document.currentScript.previousElementSibling;
  const bg = root?.querySelector(".rm__bg");
  if (Array.isArray(urls) && urls.length && bg) {
    const pick = () => urls[Math.floor(Math.random() * urls.length)];
    const url = pick();
    // Change per page load (client-side)
    bg.style.backgroundImage = `url(${url})`;
  }
</script>

<style>
  .rm {
    position: relative;
    display: grid;
    place-items: center;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  .rm__bg {
    /* Fixed, centered, no tilt */
    width: min(60vmin, 760px);
    height: min(60vmin, 760px);
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    /* subtle white look so it never fights the title */
    filter: grayscale(1) brightness(8);
    opacity: 0.25;
  }
  .rm__debug {
    position: absolute; bottom: 8px; left: 8px;
    padding: 2px 6px; border-radius: 4px;
    background:#f5d547; color:#0f0d0d;
    font: 600 12px/1.2 system-ui, sans-serif;
  }
  .rm__debug code { font: 600 12px/1.2 ui-monospace, SFMono-Regular, Menlo, monospace; }
</style>
