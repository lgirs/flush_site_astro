---
/**
 * RandomMark.astro
 * Shows one random SVG from src/assets/marks/ on each page load.
 * Self-contained: no props, safe to drop anywhere.
 *
 * IMPORTANT: Vectors must live at: src/assets/marks/*.svg
 */
const modules = import.meta.glob("../assets/marks/*.svg", {
  eager: true,
  as: "url",
});
const markUrls = Object.values(modules) as string[];
---

<div class="rm" aria-hidden="true">
  <div class="rm__mask"></div>
  <img class="rm__img" alt="" />
</div>

<script type="module" data-urls={JSON.stringify(markUrls)}>
  const URLS = JSON.parse(document.currentScript.dataset.urls || "[]");
  if (Array.isArray(URLS) && URLS.length > 0) {
    const url = URLS[Math.floor(Math.random() * URLS.length)];

    const root = document.currentScript.previousElementSibling; // <div class="rm">
    const mask = root.querySelector(".rm__mask");
    const img  = root.querySelector(".rm__img");

    // Modern: CSS mask (white “ink”)
    if (mask) {
      mask.style.maskImage = `url(${url})`;
      mask.style.webkitMaskImage = `url(${url})`;
      mask.style.maskRepeat = "no-repeat";
      mask.style.webkitMaskRepeat = "no-repeat";
      mask.style.maskPosition = "center";
      mask.style.webkitMaskPosition = "center";
      mask.style.maskSize = "contain";
      mask.style.webkitMaskSize = "contain";
      mask.style.background = "white";
    }

    // Fallback for browsers without CSS masks
    if (img) {
      img.src = url;
      img.loading = "lazy";
      img.decoding = "async";
    }
  } else {
    console.warn("[RandomMark] No SVGs found under src/assets/marks/");
  }
</script>

<style>
  /* Component sizes the mark; parent can position it */
  .rm { position: relative; display: grid; place-items: center; }
  .rm__mask, .rm__img { width: min(60vmin, 720px); height: min(60vmin, 720px); }
  .rm__img { position: absolute; inset: 0; margin: auto; object-fit: contain; opacity: 0; }
  @supports not (mask-image: url("")) { .rm__mask { display:none; } .rm__img { opacity:1; } }
</style>
