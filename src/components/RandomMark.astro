---
/**
 * RandomMark.astro
 * Renders ONE random SVG from src/assets/marks/*.svg as a background-image.
 * This avoids any possible mask/filter quirks and should be unmissable.
 *
 * If zero vectors are found, a yellow debug strip appears with guidance.
 */
const modules = import.meta.glob("../assets/marks/*.svg", {
  import: "default",
  query: "?url",
  eager: true,
});
const markUrls = Object.values(modules) as string[];
const count = markUrls.length;
const pick = (arr: string[]) => arr[Math.floor(Math.random() * arr.length)];
const choice = count > 0 ? pick(markUrls) : null;
---

<div class="rm" aria-hidden="true" style={choice ? `--rm-url: url('${choice}')` : ""}>
  <div class="rm__bg"></div>

  {count === 0 && (
    <div class="rm__debug">
      NO VECTORS FOUND in <code>src/assets/marks/</code>
    </div>
  )}

  {count > 0 && (
    <div class="rm__debug">
      vectors: {count} • first: <a href={markUrls[0]} target="_blank" rel="noopener">{markUrls[0]}</a>
    </div>
  )}
</div>

<style>
  .rm {
    position: relative;
    display: grid;
    place-items: center;
    width: 100%;
    height: 100%;
  }

  /* The visible vector — guaranteed to show if the URL resolves */
  .rm__bg {
    width: min(70vmin, 880px);
    height: min(70vmin, 880px);
    background-image: var(--rm-url);
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain; /* preserve aspect */
    opacity: 0.95;
  }

  /* Tiny unobtrusive debug strip so we can see what’s going on in prod */
  .rm__debug {
    position: absolute;
    bottom: 8px;
    left: 8px;
    padding: 2px 6px;
    background: #f5d547;
    color: #0f0d0d;
    font: 600 12px/1.2 system-ui, sans-serif;
    border-radius: 4px;
    max-width: 90%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .rm__debug a { color: #0f0d0d; text-decoration: underline; }
  .rm__debug code { font: 600 12px/1.2 ui-monospace, SFMono-Regular, Menlo, monospace; }
</style>
