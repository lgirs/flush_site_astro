---
/**
 * RandomMark.astro
 * One subtle, centered mark on EACH page load.
 * Primary source:   src/assets/marks/hero/*.svg
 * Fallback source:  src/assets/marks/*.svg
 */
const heroMods = import.meta.glob("../assets/marks/hero/*.svg", {
  import: "default",
  query: "?url",
  eager: true,
});
const allMods = import.meta.glob("../assets/marks/*.svg", {
  import: "default",
  query: "?url",
  eager: true,
});
const heroUrls = Object.values(heroMods) as string[];
const allUrls = Object.values(allMods) as string[];
const candidateUrls = heroUrls.length ? heroUrls : allUrls;

// Built-in tiny placeholder so the hero never looks empty
const PLACEHOLDER = `data:image/svg+xml;utf8,${encodeURIComponent(
  `<svg xmlns='http://www.w3.org/2000/svg' width='600' height='600' viewBox='0 0 600 600'>
     <path d='M70 520 L300 100 L530 520' fill='none' stroke='#ffffff' stroke-width='32' stroke-linecap='round'/>
   </svg>`
)}`;

// Load the tiny client module as an external asset (CSP-friendly)
import randomMarkJs from "../scripts/random-mark.ts?url";
---

<div class="rm" aria-hidden="true"
     data-rm-urls={JSON.stringify(candidateUrls)}
     data-rm-fallback={PLACEHOLDER}>
  <div class="rm__bg"></div>
</div>

<!-- external, no inline code -->
<script type="module" src={randomMarkJs}></script>

<style>
  .rm {
    position: relative;
    display: grid;
    place-items: center;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  .rm__bg {
    width: min(60vmin, 760px);
    height: min(60vmin, 760px);
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    /* subtle, white-ink feel */
    filter: grayscale(1) brightness(8);
    opacity: 0.24;
  }
</style>
