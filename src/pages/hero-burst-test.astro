---
/**
 * HeroBurst.astro (responsive)
 * Center logo with a ring of SVG marks. Renders different rings per breakpoint:
 * - mobile:   first maxMobile marks
 * - tablet:   first maxTablet marks
 * - desktop:  first maxDesktop marks
 *
 * Tweak counts and per-breakpoint radius/size without touching markup again.
 */
interface Props {
  centerLogo?: string;
  marks?: string[];

  // counts
  maxMobile?: number;
  maxTablet?: number;
  maxDesktop?: number;

  // container alignment (match header)
  maxWidth?: string;
  padX?: string;

  // perâ€‘breakpoint geometry
  radiusMobile?: string;
  radiusTablet?: string;
  radiusDesktop?: string;
  sizeMobile?: string;
  sizeTablet?: string;
  sizeDesktop?: string;

  // small angle jitter
  jitter?: number;
}

const {
  centerLogo = "/images/logo-flush-white-orange_vex.png",
  marks = [],

  maxMobile = 8,
  maxTablet = 12,
  maxDesktop = 16,

  maxWidth = "1100px",
  padX = "1rem",

  radiusMobile = "min(34vw, 300px)",
  radiusTablet = "min(36vw, 380px)",
  radiusDesktop = "min(38vw, 460px)",

  sizeMobile = "clamp(28px, 7vw, 56px)",
  sizeTablet = "clamp(36px, 6.5vw, 72px)",
  sizeDesktop = "clamp(40px, 5.5vw, 86px)",

  jitter = 8,
} = Astro.props as Props;

// helpers
function makeRing(srcs: string[], j:number){
  const total = srcs.length || 1;
  return srcs.map((src, i) => {
    const angle = (i / total) * 360;
    const jig   = ((i * 37) % (j * 2)) - j; // -j..+j deg
    return { src: encodeURI(src), angle: angle + jig };
  });
}

const ringMobile  = makeRing(marks.slice(0, Math.min(maxMobile,  marks.length)), jitter);
const ringTablet  = makeRing(marks.slice(0, Math.min(maxTablet,  marks.length)), jitter);
const ringDesktop = makeRing(marks.slice(0, Math.min(maxDesktop, marks.length)), jitter);
---
<section
  class="burst"
  style={`--mx:${maxWidth}; --px:${padX};
          --r-m:${radiusMobile}; --r-t:${radiusTablet}; --r-d:${radiusDesktop};
          --s-m:${sizeMobile};   --s-t:${sizeTablet};   --s-d:${sizeDesktop};`}
>
  <div class="burst__inner">
    <!-- center logo -->
    <img src={centerLogo} alt="Flush" class="burst__logo" loading="eager" />

    <!-- rings (only one visible by CSS at a time) -->
    <div class="burst__ring ring--mobile" aria-hidden="true">
      {ringMobile.map(m => <span class="mark" style={`--angle:${m.angle}deg; --img:url('${m.src}');`} />)}
    </div>
    <div class="burst__ring ring--tablet" aria-hidden="true">
      {ringTablet.map(m => <span class="mark" style={`--angle:${m.angle}deg; --img:url('${m.src}');`} />)}
    </div>
    <div class="burst__ring ring--desktop" aria-hidden="true">
      {ringDesktop.map(m => <span class="mark" style={`--angle:${m.angle}deg; --img:url('${m.src}');`} />)}
    </div>
  </div>
</section>

<style>
  .burst { background: var(--flush-black); padding-block: clamp(2.5rem, 8vw, 7rem); }
  .burst__inner{
    max-width: var(--mx); margin-inline:auto; padding-inline:var(--px);
    position:relative; display:grid; place-items:center; isolation:isolate;
  }

  .burst__logo{
    width:min(32vw, 340px); height:auto; display:block;
    filter: drop-shadow(0 6px 14px rgba(0,0,0,.45)); z-index:1;
  }

  .burst__ring{ position:absolute; inset:0; display:grid; place-items:center; z-index:0; pointer-events:none; }

  /* default: show mobile ring */
  .ring--mobile { display:grid; }
  .ring--tablet, .ring--desktop { display:none; }

  /* tablet up */
  @media (min-width: 700px){
    .ring--mobile { display:none; }
    .ring--tablet { display:grid; }
  }
  /* desktop up */
  @media (min-width: 1024px){
    .ring--tablet { display:none; }
    .ring--desktop{ display:grid; }
  }

  /* tinted marks via mask */
  .mark{
    position:absolute; width: var(--s-m); height: var(--s-m);
    background: var(--flush-light);
    filter: drop-shadow(0 8px 18px rgba(0,0,0,.35)); opacity:.94;

    -webkit-mask-image: var(--img); mask-image: var(--img);
    -webkit-mask-repeat:no-repeat;  mask-repeat:no-repeat;
    -webkit-mask-position:center;   mask-position:center;
    -webkit-mask-size:contain;      mask-size:contain;

    transform: rotate(var(--angle)) translate(var(--r-m)) rotate(calc(var(--angle) * -1));
    transform-origin:center;
  }

  /* tablet geometry */
  @media (min-width:700px){
    .mark{
      width: var(--s-t); height: var(--s-t);
      transform: rotate(var(--angle)) translate(var(--r-t)) rotate(calc(var(--angle) * -1));
    }
  }

  /* desktop geometry */
  @media (min-width:1024px){
    .mark{
      width: var(--s-d); height: var(--s-d);
      transform: rotate(var(--angle)) translate(var(--r-d)) rotate(calc(var(--angle) * -1));
      opacity:.92;
    }
    .burst__logo{ width:min(28vw, 320px); }
  }
</style>
