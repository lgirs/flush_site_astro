---
import BaseLayout from "../layouts/BaseLayout.astro";
import TagCloud from "../components/TagCloud.astro";

export const pageTitle = "Home (Random Mark Variant)";
export const pageTags = ["Home", "Experiment"];

// Exact SVGs you approved (in /public/images/marks/)
const MARKS = [
  "/images/marks/shit.svg",
  "/images/marks/burn.svg",
  "/images/marks/head.svg",
  "/images/marks/control.svg",
  "/images/marks/insane.svg",
  "/images/marks/wisdom.svg",
  "/images/marks/owl.svg",
  "/images/marks/clock.svg",
  "/images/marks/us.svg",
  "/images/marks/join me.svg",
];
---
<BaseLayout title="Home (Random Mark Variant)" description="Hidden: home hero with one random SVG mark">
  <meta name="robots" content="noindex,nofollow" />

  <!-- HERO -->
  <section class="hero" aria-label="Flush">
    <div class="hero__inner" style="--mx:1100px; --px:1rem; --offset-x:-6px;">
      <!-- smaller center logo with optical nudge -->
      <img
        src="/images/logo-flush-white-orange_vex.png"
        alt="Flush"
        class="hero__logo"
        loading="eager"
      />

      <!-- Random mark below (mask version, with <img> fallback) -->
      <span class="hero__mark" aria-hidden="true"></span>
      <img class="hero__markImg" alt="" aria-hidden="true" />
    </div>
  </section>

  <!-- INTRO COPY -->
  <section class="intro long-text">
    <p>
      We make loud, honest music. The words come from real life — shows, friends, late nights,
      and staying true to what matters.
    </p>
    <p>
      Dig in below: explore by tags, watch videos, or jump to the latest stories.
    </p>
  </section>

  <!-- TAG CLOUD -->
  <TagCloud />

  <script is:inline>
    (function () {
      const marks = [
        "/images/marks/shit.svg",
        "/images/marks/burn.svg",
        "/images/marks/head.svg",
        "/images/marks/control.svg",
        "/images/marks/insane.svg",
        "/images/marks/wisdom.svg",
        "/images/marks/owl.svg",
        "/images/marks/clock.svg",
        "/images/marks/us.svg",
        "/images/marks/join me.svg",
      ];
      const pick = (arr) => arr[Math.floor(Math.random() * arr.length)];
      const chosen = pick(marks);

      // Mask version (tinted white)
      const maskEl = document.querySelector(".hero__mark");
      if (maskEl) {
        maskEl.style.setProperty("--img", `url('${encodeURI(chosen)}')`);
        maskEl.classList.add("is-ready");
      }

      // PNG fallback: if browser doesn’t support CSS mask, just show the image
      const fallbackEl = document.querySelector(".hero__markImg");
      if (fallbackEl) {
        fallbackEl.src = chosen;
      }
    })();
  </script>

  <style>
    /* HERO container mirrors header: centered, same max width + padding */
    .hero {
      background: var(--flush-black);
      padding-block: clamp(2.5rem, 7vw, 6rem);
    }
    .hero__inner {
      max-width: var(--mx);
      margin-inline: auto;
      padding-inline: var(--px);
      display: grid;
      justify-items: center;
      gap: clamp(0.75rem, 1.5vw, 1.25rem);
      width: 100%;
    }
    .hero__logo {
      width: min(30vw, 300px);
      height: auto;
      display: block;
      translate: var(--offset-x, 0) 0; /* optical centering */
      filter: drop-shadow(0 6px 14px rgba(0,0,0,.45));
    }

    /* Masked mark rendered in Flush white */
    .hero__mark {
      display: none;                       /* shown once JS sets it ready */
      width: min(92vw, 920px);
      height: auto;
      aspect-ratio: 16 / 7;                /* adjust if you prefer taller/shorter */
      background: var(--flush-light);      /* Flush white tint */
      filter: drop-shadow(0 8px 18px rgba(0,0,0,.35));
      opacity: 0.95;

      /* CSS mask uses the URL from the --img var set by JS */
      -webkit-mask-image: var(--img);
      mask-image: var(--img);
      -webkit-mask-repeat: no-repeat; mask-repeat: no-repeat;
      -webkit-mask-position: center;   mask-position: center;
      -webkit-mask-size: contain;      mask-size: contain;
    }
    .hero__mark.is-ready { display: block; }

    /* Fallback image (only visible if mask is unsupported) */
    .hero__markImg {
      display: block;
      width: min(92vw, 920px);
      height: auto;
      filter: drop-shadow(0 8px 18px rgba(0,0,0,.35));
      opacity: 0.95;
    }
    /* If masks are supported, prefer the masked version and hide the fallback image */
    @supports (mask-image: url("")) or (-webkit-mask-image: url("")) {
      .hero__markImg { display: none; }
    }

    /* INTRO */
    .intro {
      max-width: 760px;
      margin: 1.5rem auto 1rem;
      padding-inline: 1rem;
      color: var(--flush-light);
    }
    .intro a { color: var(--flush-red); text-decoration: none; }
    .intro a:hover { color: var(--flush-yellow); }
  </style>
</BaseLayout>
