---
/* Page metadata for tags/word cloud */
export const pageTitle = "Gigs";
export const pageTags = ["Gigs"];

import BaseLayout from "../../layouts/BaseLayout.astro";
import gigs from "../../data/gigs.json";

/** Parse YYYY-MM-DD safely as UTC midnight */
const toDate = (s) => new Date(`${s}T00:00:00Z`);

/** Today (UTC date-only) */
const now = new Date();
const todayUTC = new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()));

/** Split into upcoming / past */
const upcoming = [];
const past = [];

gigs.forEach((g) => (toDate(g.date) >= todayUTC ? upcoming : past).push(g));

/** Sort */
upcoming.sort((a, b) => toDate(a.date) - toDate(b.date));
past.sort((a, b) => toDate(b.date) - toDate(a.date));

/** Format YYYY-MM-DD */
const fmt = (s) => {
  const d = toDate(s);
  const y = d.getUTCFullYear();
  const m = String(d.getUTCMonth() + 1).padStart(2, "0");
  const da = String(d.getUTCDate()).padStart(2, "0");
  return `${y}-${m}-${da}`;
};

const place = (g) => `${g.city}${g.country ? `, ${g.country}` : ""}`;
---

<BaseLayout title="Gigs" description="Upcoming and past gigs by Flush" tags={["Gigs"]}>
  <section class="gigs">
    <h1>Gigs</h1>

    <div class="block">
      <h2>Upcoming</h2>
      {upcoming.length === 0 ? (
        <p class="muted">No upcoming gigs yet. Check back soon.</p>
      ) : (
        <ul class="list">
          {upcoming.map((g) => (
            <li class="item">
              <span class="date">{fmt(g.date)}</span>
              <span class="details">
                <span class="event">{g.event}</span>
                <span class="at"> @ </span>
                <span class="venue">{g.venue}</span>
                {g.notes && <span class="notes"> — <em>{g.notes}</em></span>}
              </span>
              <span class="loc">{place(g)}</span>
              {g.link ? (
                <a class="link" href={g.link} target="_blank" rel="noopener">Details</a>
              ) : (
                <span class="link empty" aria-hidden="true"></span>
              )}
            </li>
          ))}
        </ul>
      )}
    </div>

    <div class="block">
      <h2>Past</h2>
      {past.length === 0 ? (
        <p class="muted">No past gigs yet.</p>
      ) : (
        <ul class="list">
          {past.map((g) => (
            <li class="item">
              <span class="date">{fmt(g.date)}</span>
              <span class="details">
                <span class="event">{g.event}</span>
                <span class="at"> @ </span>
                <span class="venue">{g.venue}</span>
                {g.notes && <span class="notes"> — <em>{g.notes}</em></span>}
              </span>
              <span class="loc">{place(g)}</span>
              {g.link ? (
                <a class="link" href={g.link} target="_blank" rel="noopener">Details</a>
              ) : (
                <span class="link empty" aria-hidden="true"></span>
              )}
            </li>
          ))}
        </ul>
      )}
    </div>
  </section>
</BaseLayout>

<style>
  .gigs { display: grid; gap: 1.5rem; }
  h1 { margin-top: .25rem; }
  h2 { margin-top: .5rem; }
  .block { display: grid; gap: .75rem; }

  /* separators version */
  .list { 
    list-style: none; 
    padding: 0; 
    margin: 0; 
    display: grid; 
    gap: 0; /* separators create visual spacing */
  }

  /* compact row layout: date | details (flex) | location | link */
  .item {
    display: grid;
    align-items: baseline;
    gap: .35rem 1rem;
    grid-template-columns: 9ch 1fr auto auto;
    padding: .5rem 0;
    border-bottom: 1px solid rgba(233,232,241,0.2);
  }
  .item:last-child { border-bottom: none; }

  .date { opacity: .9; font-variant-numeric: tabular-nums; }
  .details { min-width: 0; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
  .event { font-weight: 700; letter-spacing: .3px; text-transform: uppercase; }
  .notes { opacity: .85; }
  .loc, .link { white-space: nowrap; }
  .link.empty { width: 0.01px; overflow: hidden; }
  .muted { opacity: .8; }

  /* Small screens */
  @media (max-width: 640px){
    .item { grid-template-columns: 9ch 1fr; }
    .loc, .link { grid-column: 1 / -1; }
    .details { white-space: normal; }
  }
</style>
