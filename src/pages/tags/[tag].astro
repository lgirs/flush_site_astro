---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

// Build a page for each unique tag (lowercased)
export async function getStaticPaths() {
  const entries = await getCollection("pages");
  const tagSet = new Set<string>();

  for (const e of entries) {
    (e.data.tags || []).forEach((t: string) => tagSet.add(t.toLowerCase()));
  }

  const tags = Array.from(tagSet);
  return tags.map((tag) => ({
    params: { tag },
    props: {
      tag,
      items: entries.filter((e) =>
        (e.data.tags || []).map((t: string) => t.toLowerCase()).includes(tag)
      ),
    },
  }));
}

const { tag, items } = Astro.props as {
  tag: string;
  items: Awaited<ReturnType<typeof getCollection>>;
};
---
<BaseLayout title={`#${tag}`} description={`Posts tagged ${tag}`}>
  <h1>#{tag}</h1>
  {items.length === 0 ? (
    <p>No items yet.</p>
  ) : (
    <ul>
      {items.map((p) => (
        <li>
          <a href={`/content/${p.slug}/`}>{p.data.title}</a>
          {p.data.tags?.length ? <small> â€” {p.data.tags.join(", ")}</small> : null}
        </li>
      ))}
    </ul>
  )}
</BaseLayout>
